//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : AssemblyTileSetManager.cpp
//  @ Date : 5/20/2013
//  @ Author : 
//
//


#include "AssemblyTileSetManager.h"
AssemblyTileSetManager::AssemblyTileSetManager()
/*
 Default constructor
 */
{

}

AssemblyTileSetManager::AssemblyTileSetManager(SetOfAssemblyTiles &S)
/*
 Post-Condition: Assembly tile set manager is created and contains one set of assembly tiles
 */
{

}

AssemblyTileSetManager::~AssemblyTileSetManager()
/*
 Default destructor
 */
{

}

SetOfAssemblyTiles & AssemblyTileSetManager::getAssemblyTileSet(int index)
/*
 Post-Condition: Set that corresponds to index is returned
 */
{

}

SetOfAssemblyTiles & AssemblyTileSetManager::createANewSet()
/*
 Post-Condition: An empty set is added to the collection of sets, and the reference to this set is returned
 */
{

}

QList<SetOfAssemblyTiles> & AssemblyTileSetManager::getListOfSets()
/*
 Post-Condition: List of assembly tile sets is returned
 */
{

}

void AssemblyTileSetManager::DeleteSet(SetOfAssemblyTiles & S)
/*
 Post-Condition: If set S is in the collection, it is deleted
 */
{

}

void AssemblyTileSetManager::StoreSetOnHardrive(int index)
/*
 Post-Condition: Set that corresponds to index is stored on the hardrive
 */
{

}

void AssemblyTileSetManager::LoadSetFromHardrive(int index)
/*
 Post-Condition: Set that corresponds to index is retrived from the hardrive
 */
{

}
